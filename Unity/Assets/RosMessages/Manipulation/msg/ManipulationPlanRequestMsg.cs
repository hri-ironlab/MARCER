//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Manipulation
{
    [Serializable]
    public class ManipulationPlanRequestMsg : Message
    {
        public const string k_RosMessageName = "manipulation/ManipulationPlanRequest";
        public override string RosMessageName => k_RosMessageName;

        //  By default, the task type is PICK_AND_PLACE
        public const int DONE = 0;
        public const int PICK = 1;
        public const int PLACE = 2;
        public const int MOVE_ARM = 3;
        public const int OPEN_HAND = 4;
        public const int CLOSE_HAND = 5;
        public const int WAVE = 6;
        public const int DANCE = 7;
        public const int WIPE = 8;
        public const int POUR = 9;
        public const int READY_POSE = 10;
        public int task_type;
        //  Name to label the task
        public string task_name;
        //  Surface, object to pick, object to pour into
        public string target_object_name;
        //  Place Position
        public Geometry.PoseMsg place_pose;

        public ManipulationPlanRequestMsg()
        {
            this.task_type = 0;
            this.task_name = "";
            this.target_object_name = "";
            this.place_pose = new Geometry.PoseMsg();
        }

        public ManipulationPlanRequestMsg(int task_type, string task_name, string target_object_name, Geometry.PoseMsg place_pose)
        {
            this.task_type = task_type;
            this.task_name = task_name;
            this.target_object_name = target_object_name;
            this.place_pose = place_pose;
        }

        public static ManipulationPlanRequestMsg Deserialize(MessageDeserializer deserializer) => new ManipulationPlanRequestMsg(deserializer);

        private ManipulationPlanRequestMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.task_type);
            deserializer.Read(out this.task_name);
            deserializer.Read(out this.target_object_name);
            this.place_pose = Geometry.PoseMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.task_type);
            serializer.Write(this.task_name);
            serializer.Write(this.target_object_name);
            serializer.Write(this.place_pose);
        }

        public override string ToString()
        {
            return "ManipulationPlanRequestMsg: " +
            "\ntask_type: " + task_type.ToString() +
            "\ntask_name: " + task_name.ToString() +
            "\ntarget_object_name: " + target_object_name.ToString() +
            "\nplace_pose: " + place_pose.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
