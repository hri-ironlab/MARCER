//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.RuleMonitor
{
    [Serializable]
    public class RuleMsg : Message
    {
        public const string k_RosMessageName = "rule_monitor/Rule";
        public override string RosMessageName => k_RosMessageName;

        public const sbyte ADD = 0;
        public const sbyte REMOVE = 1;
        public const sbyte TOGGLE_IS_ACTIVE = 2;
        public const sbyte UPDATE_INDEX = 3;
        public sbyte operation;
        public TriggerTypeMsg type;
        public string name;
        public string function;
        public string description;
        public bool is_active;
        public sbyte new_index;

        public RuleMsg()
        {
            this.operation = 0;
            this.type = new TriggerTypeMsg();
            this.name = "";
            this.function = "";
            this.description = "";
            this.is_active = false;
            this.new_index = 0;
        }

        public RuleMsg(sbyte operation, TriggerTypeMsg type, string name, string function, string description, bool is_active, sbyte new_index)
        {
            this.operation = operation;
            this.type = type;
            this.name = name;
            this.function = function;
            this.description = description;
            this.is_active = is_active;
            this.new_index = new_index;
        }

        public static RuleMsg Deserialize(MessageDeserializer deserializer) => new RuleMsg(deserializer);

        private RuleMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.operation);
            this.type = TriggerTypeMsg.Deserialize(deserializer);
            deserializer.Read(out this.name);
            deserializer.Read(out this.function);
            deserializer.Read(out this.description);
            deserializer.Read(out this.is_active);
            deserializer.Read(out this.new_index);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.operation);
            serializer.Write(this.type);
            serializer.Write(this.name);
            serializer.Write(this.function);
            serializer.Write(this.description);
            serializer.Write(this.is_active);
            serializer.Write(this.new_index);
        }

        public override string ToString()
        {
            return "RuleMsg: " +
            "\noperation: " + operation.ToString() +
            "\ntype: " + type.ToString() +
            "\nname: " + name.ToString() +
            "\nfunction: " + function.ToString() +
            "\ndescription: " + description.ToString() +
            "\nis_active: " + is_active.ToString() +
            "\nnew_index: " + new_index.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
